package components

type AccordianRow struct {
    Class string
    Summary templ.Component
    Content templ.Component
    Open bool
}

type AccordianArgs struct {
    Name string
    Class string
    Rows []AccordianRow
}

var accordianStyleHandle = templ.NewOnceHandle()

templ accordianStyle() {
    <style>
        .kutoui_accordian {
            --kutoui_accordian_padding: 1rem;

            border: 1px solid var(--border-color);
            border-radius: var(--kutoui_accordian_padding);

            details {
                padding: var(--kutoui_accordian_padding);

                &:not(:last-of-type) {
                    border-bottom: 1px solid var(--border-color);
                }

                &[open] summary::after {
                    transform: rotate(270deg);
                }

                summary {
                    cursor: pointer;
                    user-select: none;
                    font-weight: bold;
                    display: flex;

                    &::after {
                        /* todo: replace with icon eventually */
                        content: ">";
                        display: inline-block;
                        margin-left: auto;
                        font-weight: bold;
                        transform: rotate(90deg);
                    }
                }

                & > div {
                    padding-top: var(--kutoui_accordian_padding);
                }
            }
        }
    </style>
}

templ Accordian(args AccordianArgs) {
    <section class={"kutoui_accordian", args.Class}>
        @accordianStyleHandle.Once() {
            @accordianStyle()
        }

        for _, row := range args.Rows {
            <details name={args.Name} class={row.Class} open?={row.Open}>
                <summary>@row.Summary</summary>
                <div>@row.Content</div>
            </details>
        }
    </section>
}