package fields

import (
    "strconv"
)

type TextArea struct {
    BaseField
    PlaceHolder string
}

func (t TextArea) GetBaseField() BaseField {
	return t.BaseField
}

func (t *TextArea) Configure() {
    t.BaseField.Configure()
}

templ textareaStyle() {
    <style type="text/css">
        .kutoui_textarea {
            background-color: transparent;
            border-radius: 0.5rem;
            padding: 0.5rem;
            min-width: 100%;
            max-width: 100%;
            resize: vertical;
            min-height: 5rem;
            color: var(--color);
        }
    </style>
}

var textAreaStyleHandle = templ.NewOnceHandle()

templ textAreaDisplay(t TextArea) {
    @textAreaStyleHandle.Once() {
        @textareaStyle()
    }

    if t.BaseField.Label != "" {
        <label for={t.BaseField.Id}>{t.BaseField.Label}</label>
    }

    <textarea
        name={t.BaseField.Name}
        id={t.BaseField.Id}
        required?={t.BaseField.Required}
        minlength={strconv.Itoa(t.BaseField.MinLength)}
        maxlength={strconv.Itoa(t.BaseField.MaxLength)}
        placeholder={t.PlaceHolder}
        class={"kutoui_textarea"}
    >
        {t.BaseField.Value}
    </textarea>
}

func (t TextArea) Display() templ.Component {
    return textAreaDisplay(t)
}